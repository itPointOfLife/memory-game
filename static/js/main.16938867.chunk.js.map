{"version":3,"sources":["components/Card.js","components/Board.js","App.js","index.js"],"names":["Card","handleCardFlip","id","value","flipped","solved","disabled","className","onClick","Board","cards","map","card","Object","values","indexOf","includes","getSortedCards","cardValue","push","sort","Math","random","App","React","useState","setCards","firstCardID","secondCardID","setFlipped","setSolved","setDisabled","useEffect","length","alert","firstCard","secondCard","resetCards","sameCardClicked","isMatch","clickedCard","find","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAEaA,EAAO,SAAC,GAA8D,IAA5DC,EAA2D,EAA3DA,eAAgBC,EAA2C,EAA3CA,GAAIC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SACjE,OACE,qBACEC,UAAS,eAAUF,EAAS,WAAa,GAAhC,YAAsCD,EAAU,WAAa,IACtEI,QAAS,kBAAOF,EAAW,KAAOL,EAAeC,IAFnD,SAGE,qBAAKK,UAAWH,EAAU,QAAU,OAApC,SAA6CA,GAAWC,EAASF,EAAQ,gBCJlEM,EAAQ,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,MAAON,EAAgD,EAAhDA,QAASH,EAAuC,EAAvCA,eAAgBI,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAC9D,OACE,qBAAKC,UAAU,QAAf,SACGG,EAAMC,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,CAEEV,GAAIU,EAAKV,GACTC,MAAOS,EAAKT,MACZC,QAASS,OAAOC,OAAOV,GAASW,QAAQH,EAAKV,KAAO,EACpDG,OAAQA,EAAOW,SAASJ,EAAKV,IAC7BD,eAAgBA,EAChBK,SAAUA,GAAYD,EAAOW,SAASJ,EAAKV,KANtCU,EAAKV,UCJpB,SAASe,IAIP,IAHA,IAAMP,EAAQ,GACVR,EAAK,EAEAgB,EAAY,EAAGA,GAAa,EAAGA,IACtCR,EAAMS,KAAK,CAAEjB,GAAIA,IAAMC,MAAOe,IAC9BR,EAAMS,KAAK,CAAEjB,GAAIA,IAAMC,MAAOe,IAEhC,OAAOR,EAAMU,MAAK,kBAAMC,KAAKC,SAAW,MAoE3BC,MAjEf,WAAgB,IAAD,EACaC,IAAMC,SAAS,IAD5B,mBACNf,EADM,KACCgB,EADD,OAEiBF,IAAMC,SAAS,CAAEE,YAAa,KAAMC,aAAc,OAFnE,mBAENxB,EAFM,KAEGyB,EAFH,OAGeL,IAAMC,SAAS,IAH9B,mBAGNpB,EAHM,KAGEyB,EAHF,OAImBN,IAAMC,UAAS,GAJlC,mBAINnB,EAJM,KAIIyB,EAJJ,KAObP,IAAMQ,WAAU,WACdN,EAAST,OACR,IAGHO,IAAMQ,WAAU,WACV3B,EAAO4B,QAAU5B,EAAO4B,SAAWvB,EAAMuB,SAC3CC,MAAM,yBACNR,EAAST,KACTa,EAAU,IACVD,EAAW,CAAEM,UAAW,KAAMC,WAAY,OAC1CL,GAAY,MAEb,CAAC1B,IAEJ,IAmBMgC,EAAa,WACjBR,EAAW,CAAEM,UAAW,KAAMC,WAAY,OAC1CL,GAAY,IAGRO,EAAkB,SAACpC,GAAD,OAAQW,OAAOC,OAAOV,GAASW,QAAQb,IAAO,GAEhEqC,EAAU,SAACrC,GACf,IAAMsC,EAAc9B,EAAM+B,MAAK,SAAC7B,GAAD,OAAUA,EAAKV,KAAOA,KAErD,OADoBQ,EAAM+B,MAAK,SAAC7B,GAAD,OAAUR,EAAQuB,cAAgBf,EAAKV,MACnDC,QAAUqC,EAAYrC,OAG3C,OACE,cAAC,EAAD,CACEO,MAAOA,EACPN,QAASA,EACTH,eApCmB,SAACC,GAGtB,GAFA6B,GAAY,GAEP3B,EAAQuB,YAGN,CACL,GAAIW,EAAgBpC,GAAK,OAAO6B,GAAY,GAC5CF,EAAW,2BAAKzB,GAAN,IAAewB,aAAc1B,KAEnCqC,EAAQrC,IACV4B,EAAU,GAAD,mBAAKzB,GAAL,CAAaD,EAAQuB,YAAazB,KAC3CmC,KAEAK,WAAWL,EAAY,UAVzBR,EAAW,2BAAKzB,GAAN,IAAeuB,YAAazB,KACtC6B,GAAY,IAgCZzB,SAAUA,EACVD,OAAQA,KCvEdsC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.16938867.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Card = ({ handleCardFlip, id, value, flipped, solved, disabled }) => {\r\n  return (\r\n    <div\r\n      className={`card ${solved ? 'success ' : ''} ${flipped ? 'flipped ' : ''}`}\r\n      onClick={() => (disabled ? null : handleCardFlip(id))}>\r\n      <div className={flipped ? 'front' : 'back'}>{flipped || solved ? value : 'Click me'}</div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Card } from './Card';\r\n\r\nexport const Board = ({ cards, flipped, handleCardFlip, solved, disabled }) => {\r\n  return (\r\n    <div className=\"board\">\r\n      {cards.map((card) => (\r\n        <Card\r\n          key={card.id}\r\n          id={card.id}\r\n          value={card.value}\r\n          flipped={Object.values(flipped).indexOf(card.id) > -1}\r\n          solved={solved.includes(card.id)}\r\n          handleCardFlip={handleCardFlip}\r\n          disabled={disabled || solved.includes(card.id)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\nimport './styles/main.css';\nimport { Board } from './components/Board';\n\nfunction getSortedCards() {\n  const cards = [];\n  let id = 1;\n\n  for (let cardValue = 1; cardValue <= 8; cardValue++) {\n    cards.push({ id: id++, value: cardValue });\n    cards.push({ id: id++, value: cardValue });\n  }\n  return cards.sort(() => Math.random() - 0.5);\n}\n\nfunction App() {\n  const [cards, setCards] = React.useState([]);\n  const [flipped, setFlipped] = React.useState({ firstCardID: null, secondCardID: null }); // latest flippes\n  const [solved, setSolved] = React.useState([]); // array of solved cards\n  const [disabled, setDisabled] = React.useState(false); // disable to click on cards(for animation)\n\n  // initial deck\n  React.useEffect(() => {\n    setCards(getSortedCards());\n  }, []);\n\n  // Reset game if it has finished\n  React.useEffect(() => {\n    if (solved.length && solved.length === cards.length) {\n      alert('Successfully finished');\n      setCards(getSortedCards());\n      setSolved([]);\n      setFlipped({ firstCard: null, secondCard: null });\n      setDisabled(false);\n    }\n  }, [solved]);\n\n  const handleCardFlip = (id) => {\n    setDisabled(true);\n    // set first flip\n    if (!flipped.firstCardID) {\n      setFlipped({ ...flipped, firstCardID: id });\n      setDisabled(false);\n    } else {\n      if (sameCardClicked(id)) return setDisabled(false);\n      setFlipped({ ...flipped, secondCardID: id });\n      // Check for cards equal\n      if (isMatch(id)) {\n        setSolved([...solved, flipped.firstCardID, id]);\n        resetCards();\n      } else {\n        setTimeout(resetCards, 2000);\n      }\n    }\n  };\n\n  const resetCards = () => {\n    setFlipped({ firstCard: null, secondCard: null });\n    setDisabled(false);\n  };\n\n  const sameCardClicked = (id) => Object.values(flipped).indexOf(id) > -1;\n\n  const isMatch = (id) => {\n    const clickedCard = cards.find((card) => card.id === id);\n    const flippedCard = cards.find((card) => flipped.firstCardID === card.id);\n    return flippedCard.value === clickedCard.value;\n  };\n\n  return (\n    <Board\n      cards={cards}\n      flipped={flipped}\n      handleCardFlip={handleCardFlip}\n      disabled={disabled}\n      solved={solved}\n    />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}